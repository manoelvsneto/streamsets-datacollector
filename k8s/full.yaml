

# 00-namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: streamsets
  labels:
    app.kubernetes.io/part-of: streamsets
---
# 01-clusterissuers.yaml
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  labels:
    app.kubernetes.io/part-of: streamsets
spec:
  acme:
    email: contato@archse.eng.br
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
      - http01:
          ingress:
            class: nginx
---
# 02-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: streamsets-config
  namespace: streamsets
  labels:
    app.kubernetes.io/part-of: streamsets
data:
  SDC_JAVA_OPTS: "-Xms512m -Xmx2g -Djdk.nio.maxCachedBufferSize=262144 -Xlog:gc*:stdout:time,uptime,level"
  SDC_CONF_HTTP_PORT: "18630"
  SDC_CONF_HTTPS_PORT: "18631"
  sdc.properties: |-
    http.port=${SDC_CONF_HTTP_PORT}
    https.port=${SDC_CONF_HTTPS_PORT}
    http.authentication=none
    production.maxBatchSize=1000
    preview.maxBatchSize=1000
    log.level=INFO
---
# 03-secret-admin.yaml
apiVersion: v1
kind: Secret
metadata:
  name: streamsets-secret
  namespace: streamsets
  labels:
    app.kubernetes.io/part-of: streamsets
type: Opaque
data:
  admin-user: YWRtaW4=          # "admin"
  admin-password: Y2hhbmdlbWUh  # "changeme!"
---
# 04-pvcs.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: streamsets-data-pvc
  namespace: streamsets
  labels:
    app.kubernetes.io/part-of: streamsets
spec:
  accessModes: [ReadWriteOnce]
  resources:
    requests:
      storage: 10Gi
  storageClassName: microk8s-hostpath
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: streamsets-logs-pvc
  namespace: streamsets
  labels:
    app.kubernetes.io/part-of: streamsets
spec:
  accessModes: [ReadWriteOnce]
  resources:
    requests:
      storage: 5Gi
  storageClassName: microk8s-hostpath
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: streamsets-resources-pvc
  namespace: streamsets
  labels:
    app.kubernetes.io/part-of: streamsets
spec:
  accessModes: [ReadWriteOnce]
  resources:
    requests:
      storage: 2Gi
  storageClassName: microk8s-hostpath
---
# 05-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: streamsets-datacollector
  namespace: streamsets
  labels:
    app.kubernetes.io/name: streamsets-datacollector
    app.kubernetes.io/part-of: streamsets
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: streamsets-datacollector
  template:
    metadata:
      labels:
        app.kubernetes.io/name: streamsets-datacollector
        app.kubernetes.io/part-of: streamsets
    spec:
      nodeSelector:
        kubernetes.io/arch: arm64
      securityContext:
        fsGroup: 0
      containers:
        - name: streamsets-datacollector
          image: manoelvsneto/streamsets-datacollector:latest
          imagePullPolicy: Always
          securityContext:
            runAsUser: 0
          ports:
            - containerPort: 18630
              name: http
            - containerPort: 18631
              name: https
          env:
            - name: SDC_JAVA_OPTS
              valueFrom:
                configMapKeyRef:
                  name: streamsets-config
                  key: SDC_JAVA_OPTS
            - name: SDC_CONF_HTTP_PORT
              valueFrom:
                configMapKeyRef:
                  name: streamsets-config
                  key: SDC_CONF_HTTP_PORT
            - name: SDC_CONF_HTTPS_PORT
              valueFrom:
                configMapKeyRef:
                  name: streamsets-config
                  key: SDC_CONF_HTTPS_PORT
            - name: ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: streamsets-secret
                  key: admin-user
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: streamsets-secret
                  key: admin-password
          resources:
            requests:
              cpu: "500m"
              memory: "2Gi"
            limits:
              cpu: "2000m"
              memory: "4Gi"
          livenessProbe:
            httpGet:
              path: /public-rest/ping
              port: 18630
            initialDelaySeconds: 120
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /public-rest/ping
              port: 18630
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
          startupProbe:
            httpGet:
              path: /public-rest/ping
              port: 18630
            periodSeconds: 10
            failureThreshold: 60
          volumeMounts:
            - name: data-volume
              mountPath: /opt/streamsets/var
            - name: data-volume
              mountPath: /opt/streamsets/data
            - name: logs-volume
              mountPath: /opt/streamsets/log
            - name: resources-volume
              mountPath: /resources
            - name: config-volume
              mountPath: /etc/sdc/sdc.properties
              subPath: sdc.properties
              readOnly: true
      volumes:
        - name: data-volume
          persistentVolumeClaim:
            claimName: streamsets-data-pvc
        - name: logs-volume
          persistentVolumeClaim:
            claimName: streamsets-logs-pvc
        - name: resources-volume
          persistentVolumeClaim:
            claimName: streamsets-resources-pvc
        - name: config-volume
          configMap:
            name: streamsets-config
---
# 06-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: streamsets-datacollector
  namespace: streamsets
  labels:
    app.kubernetes.io/name: streamsets-datacollector
    app.kubernetes.io/part-of: streamsets
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: streamsets-datacollector
  ports:
    - name: http
      port: 18630
      targetPort: 18630
      protocol: TCP
    - name: https
      port: 18631
      targetPort: 18631
      protocol: TCP
---
# 07-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: streamsets-ingress
  namespace: streamsets
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    acme.cert-manager.io/http01-edit-in-place: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    # <- isto faz a raiz "/" cair em /collector (sem mexer no solver)
    nginx.ingress.kubernetes.io/app-root: /collector
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - streamsets.archse.eng.br
      # use um secret NOVO para evitar conflito com objetos antigos
      secretName: streamsets-tls2
  rules:
    - host: streamsets.archse.eng.br
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: streamsets-datacollector
                port:
                  number: 18630


